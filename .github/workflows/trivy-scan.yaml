---
name: Trivy Scan

on:
  workflow_call:
    inputs:
      image-ref:
        required: true
        type: string
      attest:
        required: false
        type: boolean
        default: true

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    name: Scan ${{ inputs.image-ref }}
    steps:
      - name: Install Cosign
        if: ${{ inputs.attest }}
        uses: sigstore/cosign-installer@v3.4.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.18.0
        with:
          image-ref: ghcr.io/${{ github.repository }}/${{ inputs.image-ref }}
          format: "json"
          output: "${{ inputs.image-ref }}.json"

      - name: Convert results to sarif
        uses: aquasecurity/trivy-action@0.18.0
        with:
          image-ref: ${{ inputs.image-ref }}.json
          scan-type: "convert"
          format: "sarif"
          # skip --vuln-type arg
          vuln-type: ""
          output: "${{ inputs.image-ref }}.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "${{ inputs.image-ref }}.sarif"

      - name: Convert trivy results to cosign-vuln
        if: ${{ inputs.attest }}
        uses: aquasecurity/trivy-action@0.18.0
        with:
          image-ref: ${{ inputs.image-ref }}.json
          scan-type: "convert"
          format: "cosign-vuln"
          # skip --vuln-type arg
          vuln-type: ""
          output: "${{ inputs.image-ref }}.cosign.json"

      - name: Attach a security attestation to the signed image
        if: ${{ inputs.attest }}
        run: cosign attest --yes --type vuln --predicate ${{ inputs.image-ref }}.cosign.json ghcr.io/${{ github.repository }}/${{ inputs.image-ref }}
