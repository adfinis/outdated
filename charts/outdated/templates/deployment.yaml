apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outdated.fullname" . }}-api
  labels:
    {{- include "outdated.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "outdated.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "outdated.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "outdated.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ template "outdated.fullname" . }}
            {{- if .Values.existingSecret }}
            - secretRef:
                name: {{ .Values.existingSecret }}
            {{- end }}
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.postgresql.enabled }}
                  name: "{{ template "outdated.fullname" . }}-postgresql"
                  key: password
                  {{- else }}
                  name: {{ .Values.existingSecret | quote }}
                  key: DATABASE_PASSWORD
                  {{- end }}         
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: repos
              mountPath: /home/outdated/projects
      volumes:
        - name: repos
          persistentVolumeClaim:
            claimName: {{ include "outdated.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outdated.fullname" . }}-ember
  labels:
    {{- include "outdated.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "outdated.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "outdated.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: ember
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "outdated.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-ember
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.ember.image.repository }}:{{ .Values.ember.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.ember.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.ember.service.port }}
              protocol: TCP
          lifecycle:
            postStart:
              exec:
                command: 
                  - "/bin/sh"
                  - "-c"
                  - | 
                    urlencode() {
                        # urlencode <string>
                        # blatantly pinched from https://gist.github.com/cdown/1163649

                        local length="${#1}"
                        for i in $(seq 0 $((length-1))); do
                            local c="${1:i:1}"
                            case $c in
                                [a-zA-Z0-9.~_-]) printf "$c" ;;
                                *) printf '%%%02X' "'$c" ;;
                            esac
                        done
                    }
                    sed -i \
                      -e "s/oidc-client-id/$(urlencode {{.Values.oidc.clientId}})/g" \
                      -e "s/oidc-client-host/$(urlencode {{.Values.oidc.host}}/realms/{{.Values.oidc.realm}}/protocol/openid-connect)/g" \
                      /usr/share/nginx/html/index.html
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}