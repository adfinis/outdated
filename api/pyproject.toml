[tool.poetry]
name = "Outdated"
version = "1.0.0"
description = "Shows all added projects, and their packages, also indicates when a package is no longer supported."
authors = ["Adfinis AG"]
license = "GPL-3.0-or-later"
readme = "../README.md"

[tool.poetry.dependencies]
python = "^3.8"
django = "^3.2.18"
django-environ = "^0.9.0"
psycopg2-binary = "^2.9.5"
djangorestframework = "^3.14.0"
djangorestframework-jsonapi = "^6.0.0"
django-filter = "^22.1"
gunicorn = "^20.1.0"


[tool.poetry.group.dev.dependencies]
flake8 = "5.0.0"
flake8-bugbear = "23.1.20"
flake8-debugger = "4.1.2"
flake8-tuple = "0.4.1"
flake8-isort = "5.0.3"
flake8-docstrings = "1.6.0"
flake8-string-format = "0.3.0"
black = "22.12.0"
pytest-django = "4.5.2"
pytest = "7.2.1"
isort = "5.11.4"
pytest-factoryboy = "2.5.1"
pytest-cov = "^4.0.0"


[tool.isort]
skip = [
  "migrations",
]
known_first_party = ["outdated"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
line_length = 88

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "outdated.settings"


[tool.coverage.run]
source = ["."]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "pragma: todo cover",
    "def __str__",
    "def __unicode__",
    "def __repr__",
]
omit = [
    "*/migrations/*",
    "*/apps.py",
    "manage.py",
    "outdated/wsgi.py",
]
show_missing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
